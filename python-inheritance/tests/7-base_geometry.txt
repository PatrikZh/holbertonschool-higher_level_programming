Base Geometry Module Test

Method "integer_validator"

	>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

	>>> bg = BaseGeometry()
	>>> bg.integer_validator("width", 12)
	>>> bg.integer_validator("height", 89)

Error for string value:
    	>>> bg.integer_validator("name", "Holberton")
    	Traceback (most recent call last):
	TypeError: name must be an integer

Negative or equal to 0:
	>>> bg.integer_validator("num", 0)
    	Traceback (most recent call last):
    	ValueError: num must be greater than 0

Error for float value:
	>>> bg.integer_validator("num", 2.0)
    	Traceback (most recent call last):
	TypeError: num must be an integer

Error undefined:
	>>> bg.integer_validator("num", b)
    	Traceback (most recent call last):
    	NameError: name 'b' is not defined

To infinity and beyond:
	>>> bg.integer_validator("num", float("inf"))
    	Traceback (most recent call last):
    	TypeError: num must be an integer

NaN:
	>>> bg.integer_validator("num", float("nan"))
    	Traceback (most recent call last):
    	TypeError: num must be an integer

None:
    	>>> bg.integer_validator("name", None)
    	Traceback (most recent call last):
    	TypeError: name must be an integer

One argument:
    	>>> bg.integer_validator("name", )
    	Traceback (most recent call last):
    	TypeError: integer_validator() missing 1 required positional argument: 'value'

Zero parameter:
    	>>> bg.integer_validator()
    	Traceback (most recent call last):
    	TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

Name as empty string:
    	>>> bg.integer_validator("", 34)

Int as name:
    	>>> bg.integer_validator(34, 41)

Three parameters:
    	>>> bg.integer_validator("name", 19, Yo)
	Traceback (most recent call last):
    	SyntaxError: invalid syntax

Tuple as value:
    	>>> bg.integer_validator("name", (2,))
    	Traceback (most recent call last):
	TypeError: name must be an integer

List as value:
    	>>> bg.integer_validator("name", [2])
    	Traceback (most recent call last):
	TypeError: name must be an integer

Bool as value:
    	>>> bg.integer_validator("name", True)
    	Traceback (most recent call last):
	TypeError: name must be an integer

Set as value:
    	>>> bg.integer_validator("name", {1, 2})
    	Traceback (most recent call last):
	TypeError: name must be an integer

Area function:
	>>> bg.area()
    	Traceback (most recent call last):
    	Exception: area() is not implemented
