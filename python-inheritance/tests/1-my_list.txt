Module 1-my_list

Getting MyList class:

	>>> MyList = __import__('1-my_list').MyList

No arguments

	>>> my_list = MyList()
	>>> type(my_list)
	<class '1-my_list.MyList'>

	>>> print(my_list)
	[]

	>>> my_list = MyList()
	>>> my_list.print_sorted()
	[]

Includes arguments

	>>> my_list = MyList([3, 1, 2])
	>>> print(my_list)
	[3, 1, 2]

 If None is as argument call TypeError:

	>>> my_list = MyList(None)
	Traceback (most recent call last):
	TypeError: 'NoneType' object is not iterable

Inherits methods from parent class

	>>> my_list = MyList()
	>>> my_list.append(1)
 	>>> my_list.append(4)
	>>> my_list.append(2)
	>>> print(my_list)
	[1, 4, 2]
	>>> my_list.print_sorted()
	[1, 2, 4]
	>>> print(my_list)
	[1, 4, 2]

Takes arguments as strings

	>>> my_list = MyList()
	>>> my_list.append("yo")
	>>> my_list.append("how")
	>>> my_list.append("areu")
	>>> my_list.print_sorted()
	['yo', 'how', 'areu']

	>>> my_list = MyList([1, "hi", 5, "ok"])
	>>> my_list.print_sorted()
	Traceback (most recent call last):
	TypeError: '<' not supported between instances of 'str' and 'int'

	>>> my_list = MyList()
	>>> my_list.print_sorted(1)
	Traceback (most recent call last):
	TypeError: print_sorted() takes 1 positional argument but 2 were given

	>>> my_list = MyList([1, 2], [3, 4])
	Traceback (most recent call last):
	TypeError: list expected at most 1 argument, got 2

	>>> issubclass(MyList, list)
	True

	>>> issubclass(list, MyList)
	False

	>>> my_list = MyList(5)
	Traceback (most recent call last):
	TypeError: 'int' object is not iterable 
