Module 0-add_integer

def add_integer(a, b=98) defines addition of 2 integers

	>>> add_integer = __import__('0-add_integer').add_integer

Function that returns sum of positive a, b

	>>> add_integer(4, 8)
	12

Function that returns sum of negative a, b

	>>> add_integer(-3, -6)
	-9
	>>> add_integer(-5, -5)
	-10

If b is missing, the default value is 98

	>>> add_integer(5)
	103

If the arguments are not int or float

	>>> add_integer(2, "Hello")
	Traceback (most recent call last):
	TypeError: b must be an integer

	>>> add_integer("Hello", 3)
	Traceback (most recent call last):
	TypeError: a must be an integer

	>>> add_integer(None)
	Traceback (most recent call last):
	TypeError: a must be an integer

	>>> add_integer(hello)
	Traceback (most recent call last):
       	NameError: name 'hello' is not defined

	>>> add_integer(float('inf'))
	Traceback (most recent call last):
	OverflowError: cannot convert float infinity to integer

	>>> add_integer(float('inf'), 9)
	Traceback (most recent call last):
	OverflowError: cannot convert float infinity to integer

	>>> add_integer(float('nan'))
	Traceback (most recent call last):
	ValueError: cannot convert float NaN to integer

	>>> add_integer(float('nan'), 9)
	Traceback (most recent call last):
	ValueError: cannot convert float NaN to integer
